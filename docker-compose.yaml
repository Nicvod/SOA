services:
  user_db:
    image: postgres:13
    container_name: user_db
    env_file: .user.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./userService/db/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  user_app:
    build:
      context: .
      dockerfile: ./userService/Dockerfile
    container_name: user_app
    depends_on:
      - user_db
    env_file: .user.env
    ports:
      - "50051:50051"
    volumes:
      - ./userService/.keys:/app/.keys

  post_db:
    image: postgres:13
    container_name: post_db
    env_file: .post.env
    volumes:
      - post_postgres_data:/var/lib/postgresql/data
      - ./postService/db/init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"

  post_app:
    build:
      context: .
      dockerfile: ./postService/Dockerfile
    container_name: post_app
    depends_on:
      - post_db
    env_file: .post.env
    ports:
      - "50052:50051"
    volumes:
      - ./userService/.keys:/app/.keys

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    container_name: react_frontend
    ports:
      - "80"

  api_gateway:
    build:
      context: .
      dockerfile: ./apigateway/Dockerfile
    container_name: api_gateway
    ports:
      - "80"
    depends_on:
      - user_app

  nginx:
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - api_gateway

  kafka:
  

volumes:
  postgres_data:
  post_postgres_data: